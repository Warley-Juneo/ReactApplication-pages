{"ast":null,"code":"// import axios from \"axios\"\n\nlet urlServer = 'http://localhost:8080';\nexport const ApiPost = async (name, email, password) => {\n  const update = {\n    username: name,\n    email: email,\n    password: password\n  };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: update\n  };\n  console.log(options);\n  let response = await fetch(urlServer, options).then(encoded => encoded.json());\n  console.log(response);\n  return response;\n};\n_c = ApiPost;\nvar _c;\n$RefreshReg$(_c, \"ApiPost\");","map":{"version":3,"names":["urlServer","ApiPost","name","email","password","update","username","options","method","headers","body","console","log","response","fetch","then","encoded","json"],"sources":["/home/frosa-ma/frosa-ma/dojo/ReactApplication-pages/my-app/src/services/api.jsx"],"sourcesContent":["// import axios from \"axios\"\n\nlet urlServer = 'http://localhost:8080'\n\nexport const ApiPost = async (name, email, password) => {\n\tconst update = {\n\t\tusername: name,\n\t\temail: email,\n\t\tpassword: password,\n\t};\n\n\tconst options = {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: update,\n\t};\n\tconsole.log(options)\n\tlet response = await fetch(urlServer, options).then(encoded => encoded.json())\n\tconsole.log(response)\n\treturn(response)\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,OAAO,GAAG,OAAOC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACvD,MAAMC,MAAM,GAAG;IACdC,QAAQ,EAAEJ,IAAI;IACdC,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACX,CAAC;EAED,MAAMG,OAAO,GAAG;IACfC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEL;EACP,CAAC;EACDM,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACpB,IAAIM,QAAQ,GAAG,MAAMC,KAAK,CAACd,SAAS,EAAEO,OAAO,CAAC,CAACQ,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,EAAE,CAAC;EAC9EN,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EACrB,OAAOA,QAAQ;AAChB,CAAC;AAAA,KAlBYZ,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}